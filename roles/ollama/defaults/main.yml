---
# Основные параметры Ollama
ollama_version: "latest"
ollama_image: "ollama/ollama"
ollama_container_name: "ollama"

# Сетевые настройки
ollama_port: 11434
ollama_host: "0.0.0.0"

# Настройки Docker volumes
ollama_use_host_volumes: false
ollama_data_volume: "ollama_data"
ollama_models_volume: "ollama_models"

# Пути на хосте (используются если ollama_use_host_volumes: true)
ollama_host_data_path: "/opt/ollama/data"
ollama_host_models_path: "/opt/ollama/models"

# Переменные окружения для контейнера
ollama_environment_vars:
  OLLAMA_HOST: "{{ ollama_host }}:{{ ollama_port }}"
  OLLAMA_MODELS: "/root/.ollama/models"

# Дополнительные параметры контейнера
ollama_restart_policy: "unless-stopped"
ollama_memory_limit: "4g"
ollama_cpus: "2.0"

# GPU поддержка (требует nvidia-container-toolkit)
ollama_enable_gpu: false
ollama_gpu_device_requests:
  - driver: nvidia
    count: all
    capabilities:
      - gpu

# Логирование
ollama_log_driver: "json-file"
ollama_log_options:
  max-size: "10m"
  max-file: "3"

# Модели для предварительной загрузки
ollama_preload_models: []
# Пример:
# ollama_preload_models:
#   - llama2
#   - codellama

# Пользователь и группа для работы с файлами на хосте
ollama_user: "ollama"
ollama_group: "ollama"
ollama_uid: 1000
ollama_gid: 1000

# Настройки безопасности
ollama_security_opts: []
# Пример:
# ollama_security_opts:
#   - "no-new-privileges:true"

# Дополнительные порты для проброса
ollama_additional_ports: []
# Пример:
# ollama_additional_ports:
#   - "8080:8080"

# ===========================================
# Docker installation options (geerlingguy.docker role)
# ===========================================

# Установка Docker Compose
docker_install_compose: true
docker_install_compose_plugin: true

# Версия Docker Compose (оставить пустым для latest)
# docker_compose_version: "2.24.0"

# Пользователи для добавления в группу docker
docker_users: []
# Пример:
# docker_users:
#   - "{{ ansible_user }}"
#   - ubuntu

# Конфигурация Docker daemon
docker_daemon_options: {}
# Пример:
# docker_daemon_options:
#   log-driver: "json-file"
#   log-opts:
#     max-size: "10m"
#     max-file: "3"
#   storage-driver: "overlay2"

# Состояние для restart handler
docker_restart_handler_state: "restarted"

# Дополнительные пакеты Docker (переопределение значений по умолчанию)
docker_package: "docker-ce"
docker_package_state: present

# Репозиторий Docker
docker_apt_repository: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
docker_apt_ignore_key_error: true
docker_apt_gpg_key: "https://download.docker.com/linux/ubuntu/gpg"

# Службы Docker
docker_service_manage: true
docker_service_state: started
docker_service_enabled: true